name: Auto Release

on:
  push:
    tags:
      - '*'  # This will trigger on any tag push

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for better release notes
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get the tag message
          echo "## Release Notes" > release_notes.md
          
          # Get the tag message
          TAG_MESSAGE=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
          echo "$TAG_MESSAGE" >> release_notes.md
          
          # Get commit history since last tag
          echo -e "\n## Changes" >> release_notes.md
          echo "### Commits" >> release_notes.md
          
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "")
          
          if [ -n "$PREV_TAG" ]; then
            # Get commits between previous tag and current tag
            git log --pretty=format:"- %s (%h)" $PREV_TAG..${{ github.ref_name }} >> release_notes.md
          else
            # If no previous tag, get all commits
            git log --pretty=format:"- %s (%h)" ${{ github.ref_name }} >> release_notes.md
          fi
          
          # Add dependency changes if package.json was modified
          if git diff --name-only $PREV_TAG ${{ github.ref_name }} | grep -q "package.json"; then
            echo -e "\n### Dependency Updates" >> release_notes.md
            echo "The following dependencies were updated:" >> release_notes.md
            git diff $PREV_TAG ${{ github.ref_name }} package.json | grep -E '^[+-]  "' | sed 's/^[+-]  "/- /' >> release_notes.md
          fi
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Release Assets
        run: |
          yarn install
          yarn build
          zip -r build.zip dist/
          
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build.zip
          token: ${{ secrets.GITHUB_TOKEN }} 